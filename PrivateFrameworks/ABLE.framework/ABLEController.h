/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ABLE.framework/ABLE
 */

@interface ABLEController : NSObject <ABLEEvents> {
    NSObject<OS_dispatch_queue> * DuetABLEQueue;
    NSObject<OS_dispatch_source> * DuetABLETimer;
    NSUserDefaults * _ableUserDefaults;
    bool  _adjustForAbsoluteBatteryLevel;
    bool  _adjustForShortDrain;
    bool  _admissionLoggingEnabled;
    NSDictionary * _appSettings;
    CDAdmissionControlLogWriter * _cdAdmissionLog;
    ABLEModelController * _chargingModelController;
    id /* block */  _configurationChangedHandler;
    ABLECoreDuetController * _coreDuetController;
    int  _coreDuetSettingsNotifyToken;
    NSUserDefaults * _coreDuetUserDefaults;
    id  _dataSourceOverride;
    ABLEModelController * _defaultModelController;
    bool  _enabled;
    NSNumber * _lastBON;
    NSDate * _lastBONDate;
    NSNumber * _lastBatteryLevel;
    NSNumber * _lastChargingState;
    NSNumber * _lastRawBON;
    long long  _maxBONWithoutCharge;
    NSDictionary * _modelControllers;
    ABLEBONPostAdjust * _postAdjust;
    ABLEBONPostAdjust * _postAdjustChargeDirect;
    ABLEBONPostAdjust * _postAdjustDrainDirect;
    NSString * _selectedModel;
    int  _settingsNotifyToken;
    double  _shortDrainMultiplier;
    double  _shortDrainThreshold;
    bool  _suspended;
    double  _timeToCalculateBON;
    double  _timeToRecalculateModel;
    double  _timeToResetAndRecalculateModel;
    float  _timerFrequencyPerHour;
    bool  _timerSuspended;
    NSArray * _validModelControllers;
    unsigned long long  sequenceNumber;
}

@property (retain) NSUserDefaults *ableUserDefaults;
@property bool adjustForAbsoluteBatteryLevel;
@property bool adjustForShortDrain;
@property bool admissionLoggingEnabled;
@property (retain) NSDictionary *appSettings;
@property (retain) CDAdmissionControlLogWriter *cdAdmissionLog;
@property (retain) ABLEModelController *chargingModelController;
@property (nonatomic, copy) id /* block */ configurationChangedHandler;
@property (retain) ABLECoreDuetController *coreDuetController;
@property int coreDuetSettingsNotifyToken;
@property (retain) NSUserDefaults *coreDuetUserDefaults;
@property (retain) id dataSourceOverride;
@property (retain) ABLEModelController *defaultModelController;
@property bool enabled;
@property (retain) NSNumber *lastBON;
@property (retain) NSDate *lastBONDate;
@property (retain) NSNumber *lastBatteryLevel;
@property (retain) NSNumber *lastChargingState;
@property (retain) NSNumber *lastRawBON;
@property long long maxBONWithoutCharge;
@property (retain) NSDictionary *modelControllers;
@property (retain) ABLEBONPostAdjust *postAdjust;
@property (retain) ABLEBONPostAdjust *postAdjustChargeDirect;
@property (retain) ABLEBONPostAdjust *postAdjustDrainDirect;
@property (retain) NSString *selectedModel;
@property int settingsNotifyToken;
@property double shortDrainMultiplier;
@property double shortDrainThreshold;
@property bool suspended;
@property double timeToCalculateBON;
@property double timeToRecalculateModel;
@property double timeToResetAndRecalculateModel;
@property float timerFrequencyPerHour;
@property bool timerSuspended;
@property (retain) NSArray *validModelControllers;

+ (id)appDefaults;
+ (void)resetConfiguration;
+ (id)staticAppDefaults;

- (void).cxx_destruct;
- (id)ableUserDefaults;
- (bool)adjustForAbsoluteBatteryLevel;
- (bool)adjustForShortDrain;
- (bool)admissionLoggingEnabled;
- (id)appSettings;
- (void)calculateBONForCurrentLevel:(float)arg1 andChargeState:(bool)arg2 atDate:(id)arg3 onQueue:(id)arg4 usingHandler:(id /* block */)arg5;
- (id)cdAdmissionLog;
- (id)chargingModelController;
- (id /* block */)configurationChangedHandler;
- (id)coreDuetController;
- (int)coreDuetSettingsNotifyToken;
- (id)coreDuetUserDefaults;
- (id)dataSourceOverride;
- (id)defaultModelController;
- (bool)enabled;
- (bool)getChargeModeOverride;
- (id)getModelMode;
- (float)gradientLong;
- (float)gradientShort;
- (id)initWithCDSession:(id)arg1 device:(id)arg2 changeHandler:(id /* block */)arg3;
- (id)initWithCoreDuetController:(id)arg1 changeHandler:(id /* block */)arg2;
- (id)lastBON;
- (id)lastBONDate;
- (id)lastBatteryLevel;
- (id)lastChargingState;
- (id)lastRawBON;
- (long long)maxBONWithoutCharge;
- (id)modelControllers;
- (id)postAdjust;
- (id)postAdjustChargeDirect;
- (id)postAdjustDrainDirect;
- (id)reportStateWithRequest:(id)arg1;
- (id)reportStateWithRequestInner;
- (void)resetModel;
- (id)selectedModel;
- (void)setAbleUserDefaults:(id)arg1;
- (void)setAdjustForAbsoluteBatteryLevel:(bool)arg1;
- (void)setAdjustForShortDrain:(bool)arg1;
- (void)setAdmissionLoggingEnabled:(bool)arg1;
- (void)setAppSettings:(id)arg1;
- (void)setCdAdmissionLog:(id)arg1;
- (void)setChargingModelController:(id)arg1;
- (void)setConfigurationChangedHandler:(id /* block */)arg1;
- (void)setCoreDuetController:(id)arg1;
- (void)setCoreDuetSettingsNotifyToken:(int)arg1;
- (void)setCoreDuetUserDefaults:(id)arg1;
- (void)setDataSourceOverride:(id)arg1;
- (void)setDefaultModelController:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setLastBON:(id)arg1;
- (void)setLastBONDate:(id)arg1;
- (void)setLastBatteryLevel:(id)arg1;
- (void)setLastChargingState:(id)arg1;
- (void)setLastRawBON:(id)arg1;
- (void)setMaxBONWithoutCharge:(long long)arg1;
- (void)setModelControllers:(id)arg1;
- (void)setPostAdjust:(id)arg1;
- (void)setPostAdjustChargeDirect:(id)arg1;
- (void)setPostAdjustDrainDirect:(id)arg1;
- (void)setSelectedModel:(id)arg1;
- (void)setSettingsNotifyToken:(int)arg1;
- (void)setShortDrainMultiplier:(double)arg1;
- (void)setShortDrainThreshold:(double)arg1;
- (void)setSuspended:(bool)arg1;
- (void)setTimeToCalculateBON:(double)arg1;
- (void)setTimeToRecalculateModel:(double)arg1;
- (void)setTimeToResetAndRecalculateModel:(double)arg1;
- (void)setTimerFrequencyPerHour:(float)arg1;
- (void)setTimerSuspended:(bool)arg1;
- (void)setValidModelControllers:(id)arg1;
- (int)settingsNotifyToken;
- (double)shortDrainMultiplier;
- (double)shortDrainThreshold;
- (void)significantEventAtDate:(id)arg1;
- (bool)suspended;
- (double)timeToCalculateBON;
- (double)timeToRecalculateModel;
- (double)timeToResetAndRecalculateModel;
- (float)timerFrequencyPerHour;
- (bool)timerSuspended;
- (void)typeCheckAndFixConfiguration:(id)arg1;
- (void)updateConfiguration;
- (void)updateConfigurationFromCoreDuet;
- (void)updateModelsForDate:(id)arg1;
- (void)updateTimerAndScheduleImmediately:(bool)arg1;
- (id)validModelControllers;

@end
