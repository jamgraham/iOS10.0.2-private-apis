/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ABLE.framework/ABLE
 */

@interface ABLEPredictionModelController : ABLEModelController {
    NSArray * _adjustedPredictionPriorDayVector;
    NSArray * _adjustedPredictionVector;
    ABLEBONPrediction * _bonMap;
    ABLECoreDuetController * _coreDuetController;
    unsigned long long  _currentBON;
    double  _minimumRSquared;
    double  _minimumValidCorrelation;
    ABLEPredictabilityController * _predictabilityController;
    ABLEPredictionController * _predictionController;
    NSDate * _predictionDate;
    NSArray * _predictionPriorDayVector;
    NSArray * _predictionVector;
    NSDate * _priorDay;
    NSArray * _priorDayActualVector;
    double  _rsquaredForPriorDay;
    double  _samplePeriod;
    bool  _softLanding;
    double  _softLandingDecayRate;
    double  _softLandingMaximum;
    double  _softLandingMinimum;
    NSArray * _todayActualVector;
    NSArray * dayOffsets;
    bool  enabled;
    bool  expires;
    NSDate * expiryDate;
    double  lifetime;
    double  predictabilityOffset;
    bool  valid;
}

@property (retain) NSArray *adjustedPredictionPriorDayVector;
@property (retain) NSArray *adjustedPredictionVector;
@property (readonly) ABLEBONPrediction *bonMap;
@property (readonly) ABLECoreDuetController *coreDuetController;
@property (readonly) unsigned long long currentBON;
@property (retain) NSArray *dayOffsets;
@property bool enabled;
@property (readonly) double lifetime;
@property double minimumRSquared;
@property double minimumValidCorrelation;
@property (retain) ABLEPredictabilityController *predictabilityController;
@property double predictabilityOffset;
@property (retain) ABLEPredictionController *predictionController;
@property (retain) NSDate *predictionDate;
@property (retain) NSArray *predictionPriorDayVector;
@property (retain) NSArray *predictionVector;
@property (retain) NSDate *priorDay;
@property (retain) NSArray *priorDayActualVector;
@property double rsquaredForPriorDay;
@property double samplePeriod;
@property bool softLanding;
@property double softLandingDecayRate;
@property double softLandingMaximum;
@property double softLandingMinimum;
@property (retain) NSArray *todayActualVector;

+ (id)defaultConfiguration;
+ (id)predictionVectorWithSession:(id)arg1 date:(id)arg2 config:(id)arg3;

- (void).cxx_destruct;
- (id)adjustedPredictionPriorDayVector;
- (id)adjustedPredictionVector;
- (id)bonMap;
- (void)calculateBONForCurrentLevel:(float)arg1 andChargeState:(bool)arg2 atDate:(id)arg3 onQueue:(id)arg4 usingHandler:(id /* block */)arg5;
- (id)coreDuetController;
- (void)createPredictionForDateRaw:(id)arg1;
- (unsigned long long)currentBON;
- (id)currentState;
- (id)dayOffsets;
- (bool)enabled;
- (bool)existsDataForPredictionUsingDay:(id)arg1 andOffsetDays:(id)arg2;
- (bool)existsDataForPredictionUsingDefaultOffsetsAndDay:(id)arg1;
- (bool)expires;
- (id)expiryDate;
- (double)getPredictionFromExistingPredictionForDate:(id)arg1;
- (id)initWithCoreDuetController:(id)arg1;
- (double)lifetime;
- (double)minimumRSquared;
- (double)minimumValidCorrelation;
- (id)predictabilityController;
- (double)predictabilityOffset;
- (id)predictionController;
- (id)predictionDate;
- (id)predictionPriorDayVector;
- (id)predictionVector;
- (id)priorDay;
- (id)priorDayActualVector;
- (void)resetModel;
- (double)rsquaredForPriorDay;
- (double)samplePeriod;
- (void)setAdjustedPredictionPriorDayVector:(id)arg1;
- (void)setAdjustedPredictionVector:(id)arg1;
- (void)setDayOffsets:(id)arg1;
- (void)setEnabled:(bool)arg1;
- (void)setMinimumRSquared:(double)arg1;
- (void)setMinimumValidCorrelation:(double)arg1;
- (void)setPredictabilityController:(id)arg1;
- (void)setPredictabilityOffset:(double)arg1;
- (void)setPredictionController:(id)arg1;
- (void)setPredictionDate:(id)arg1;
- (void)setPredictionPriorDayVector:(id)arg1;
- (void)setPredictionVector:(id)arg1;
- (void)setPriorDay:(id)arg1;
- (void)setPriorDayActualVector:(id)arg1;
- (void)setRsquaredForPriorDay:(double)arg1;
- (void)setSamplePeriod:(double)arg1;
- (void)setSoftLanding:(bool)arg1;
- (void)setSoftLandingDecayRate:(double)arg1;
- (void)setSoftLandingMaximum:(double)arg1;
- (void)setSoftLandingMinimum:(double)arg1;
- (void)setTodayActualVector:(id)arg1;
- (void)setValid:(bool)arg1;
- (void)significantEventAtDate:(id)arg1;
- (bool)softLanding;
- (double)softLandingDecayRate;
- (double)softLandingMaximum;
- (double)softLandingMinimum;
- (id)todayActualVector;
- (void)updateConfiguration:(id)arg1;
- (bool)valid;

@end
